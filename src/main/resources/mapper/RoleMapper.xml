<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atstudy.mapper.RoleMapper">
    <select id="getAll"  resultType="Role">
        select *
        from role
    </select>

    <select id="getListByAdminId" resultType="Role">
        select r.*
        from admin_role ar join `role` r
            on ar.role_id = r.role_id
        where admin_id = #{admin_id}
    </select>

    <!-- todo，需要实现分页功能。。增加limit子句？ -->
    <select id="getList" resultType="Role">
        select * from role r
        <where>
            <if test="roleSearchBo.role_id != null">
                r.role_id = #{roleSearchBo.role_id}
            </if>
            <if test="roleSearchBo.role_name != null and roleSearchBo.role_name.length>0">
                and r.role_name like '%${roleSearchBo.role_name}%'
            </if>
        </where>
        limit #{pageBo.startIndex},#{pageBo.pageSize}
    </select>

    <!-- 需要告诉mybatis，当前的数据访问层的方法，返回是整数 -->
    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from role r
        <where>
            <if test="roleSearchBo.role_id != null">
                r.role_id = #{roleSearchBo.role_id}
            </if>
            <if test="roleSearchBo.role_name != null and roleSearchBo.role_name.length>0">
                and r.role_name like '%${roleSearchBo.role_name}%'
            </if>
        </where>
    </select>


    <insert id="addOne" useGeneratedKeys="true" keyProperty="role_id">
        insert into `role`
        (`role_name`)
        values
        ( #{addRoleBo.role_name} )
    </insert>

    <insert id="multiAddRolePermission">
        insert into `role_permission`
        ( `role_id` , `permission_id` )
        values
        <foreach collection="addRoleBo.id_list" item="permission_id" separator=",">
            ( #{addRoleBo.role_id} , #{permission_id} )
        </foreach>
    </insert>

    <update id="putOne">
        update `role`
        set
        `role_name` = #{updateRoleBo.role_name}
        where
        `role_id` = #{updateRoleBo.role_id}
    </update>

    <delete id="deleteRolePermissionByRoleId">
        delete from `role_permission`
        where
        `role_id` = #{role_id}
    </delete>

    <delete id="deleteOne">
        delete from `role`
        where
        `role_id` = #{role_id}
    </delete>

    <delete id="multiDelete">
        delete from `role`
        where
        `role_id` in
        <foreach collection="id_list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <delete id="multiDeleteRolePermission">
        delete from `role_permission`
        where
        `role_id` in
        <foreach collection="id_list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>


    <select id="getOne" resultType="Role">
        select *
        from
        `role`
        where
        `role_id` = #{roleId}
    </select>


    <select id="getListByOperateUrl" resultType="Role">
        select
        d.*
        from
        `operate` a
        inner join `permission_operate` b on a.`operate_id` = b.`operate_id`
        inner join `role_permission` c on b.`permission_id` = c.`permission_id`
        inner join `role` d on c.`role_id` = d.`role_id`
        where
        a.`operate_url` = #{operate_url}
    </select>

</mapper>
